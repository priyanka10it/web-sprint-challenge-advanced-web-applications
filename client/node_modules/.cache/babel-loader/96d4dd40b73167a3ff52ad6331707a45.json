{"ast":null,"code":"var _jsxFileName = \"C:\\\\Priyanka\\\\Lambda\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from './utils/axiosWithAuth';\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [color, setColor] = useState({\n    color: \"\",\n    code: {\n      hex: \"\"\n    }\n  });\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth().put(`/api/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    window.location.reload(true);\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    axiosWithAuth().delete(`/api/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      console.log(res);\n      updateColors(colors.filter(item => item.id !== colorToEdit.id));\n    });\n  };\n\n  const handleChanges = e => {\n    setColor({ ...color,\n      [e.target.name]: e.target.value\n    });\n    console.log(color);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/colors', color).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    }); //props.history.push('/creatures')\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"colorName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"ColorName\"), React.createElement(\"input\", {\n    onChange: handleChanges,\n    type: \"text\",\n    value: color.colorName,\n    placeholder: \"colorName\",\n    name: \"colorName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"hexCode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"HexCode\"), React.createElement(\"input\", {\n    onChange: e => {\n      setColor({ ...color,\n        code: {\n          hex: e.target.value\n        }\n      });\n    },\n    type: \"text\",\n    value: color.code.hex,\n    placeholder: \"HexCode\",\n    name: \"hexCode\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Priyanka/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","setColor","editColor","saveEdit","e","preventDefault","put","id","then","res","catch","err","window","location","reload","deleteColor","delete","filter","item","handleChanges","target","name","value","handleSubmit","post","map","stopPropagation","backgroundColor","colorName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {axiosWithAuth} from './utils/axiosWithAuth';\r\n\r\nconst initialColor = {\r\n  color: \"\",\r\n  code: { hex: \"\" }\r\n};\r\n\r\nconst ColorList = ({ colors, updateColors }) => {\r\n  console.log(colors);\r\n  const [editing, setEditing] = useState(false);\r\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\r\n  const [color, setColor] = useState({\r\n    color:\"\",\r\n    code:{hex:\"\"}\r\n})\r\n\r\n  const editColor = color => {\r\n    setEditing(true);\r\n    setColorToEdit(color);\r\n  };\r\n\r\n  const saveEdit = e => {\r\n    e.preventDefault();\r\n    // Make a put request to save your updated color\r\n    // think about where will you get the id from...\r\n    // where is is saved right now?\r\n    axiosWithAuth()\r\n        .put(`/api/colors/${colorToEdit.id}`,colorToEdit)\r\n        .then(res=>{\r\n            console.log(res)\r\n            })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       window.location.reload(true) \r\n    };\r\n  \r\n\r\n  const deleteColor = color => {\r\n    // make a delete request to delete this color\r\n    axiosWithAuth()\r\n        .delete(`/api/colors/${colorToEdit.id}`,colorToEdit)\r\n        .then(res=>{\r\n            console.log(res)\r\n            updateColors(colors.filter((item)=>item.id!==colorToEdit.id))\r\n        })\r\n    };\r\n\r\n    const handleChanges = (e) => {\r\n      setColor({...color,\r\n       [e.target.name]:e.target.value\r\n       })\r\n       console.log(color);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      axiosWithAuth()\r\n      .post('/api/colors',color)\r\n      .then(res=>{\r\n          console.log(res)\r\n      })\r\n      .catch(err=>{\r\n          console.log(err)\r\n      })\r\n      //props.history.push('/creatures')\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"colors-wrap\">\r\n      <p>colors</p>\r\n      <ul>\r\n        {colors.map(color => (\r\n          <li key={color.color} onClick={() => editColor(color)}>\r\n            <span>\r\n              <span className=\"delete\" onClick={e => {\r\n                    e.stopPropagation();\r\n                    deleteColor(color)\r\n                  }\r\n                }>\r\n                  x\r\n              </span>{\" \"}\r\n              {color.color}\r\n            </span>\r\n            <div\r\n              className=\"color-box\"\r\n              style={{ backgroundColor: color.code.hex }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editing && (\r\n        <form onSubmit={saveEdit}>\r\n          <legend>edit color</legend>\r\n          <label>\r\n            color name:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\r\n              }\r\n              value={colorToEdit.color}\r\n            />\r\n          </label>\r\n          <label>\r\n            hex code:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({\r\n                  ...colorToEdit,\r\n                  code: { hex: e.target.value }\r\n                })\r\n              }\r\n              value={colorToEdit.code.hex}\r\n            />\r\n          </label>\r\n          <div className=\"button-row\">\r\n            <button type=\"submit\">save</button>\r\n            <button onClick={() => setEditing(false)}>cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div className=\"spacer\" />\r\n      {/* stretch - build another form here to add a color */}\r\n      {<form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"colorName\">ColorName</label>\r\n            <input onChange={handleChanges}\r\n                    type=\"text\"\r\n                    value={color.colorName}\r\n                    placeholder=\"colorName\"\r\n                    name=\"colorName\"\r\n                    required>\r\n            </input>\r\n            \r\n            <label htmlFor=\"hexCode\">HexCode</label>\r\n            <input onChange={e=>{\r\n                setColor({\r\n                    ...color,\r\n                    code:{hex:e.target.value}\r\n                })\r\n            }}\r\n                    type=\"text\"\r\n                    value={color.code.hex}\r\n                    placeholder=\"HexCode\"\r\n                    name=\"hexCode\"\r\n                    required>\r\n            </input>\r\n            <button>Submit</button>\r\n        </form>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"]},"metadata":{},"sourceType":"module"}